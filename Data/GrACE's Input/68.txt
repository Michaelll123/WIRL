<CurrentEdit>
<prefix>     * http://stackoverflow.com/a/17410076
     * This method converts device specific pixels to density independent pixels.
     *
     * @param px      A value in px (pixels) unit. Which we need to convert into db
     * @param context Context to get resources and device specific display metrics
     * @return A float value to represent dp equivalent to px value
     */
    public static int convertPixelsToDp(float px, Context context) {
        DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();
        return Math.round(px / (displayMetrics.xdpi / DisplayMetrics.DENSITY_DEFAULT));
    }

    //http://stackoverflow.com/a/4989543
    public static byte[] convertBitmapToByteArray(Bitmap bitmap, CompressFormat compressFormat) {
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
</prefix>
<before>        bmp.compress(Bitmap.CompressFormat.PNG, 100, stream);
</before>
<after></after>
<suffix>        return stream.toByteArray();
    }

    public static byte[] BitmapToGrayScale(Bitmap bmp) {
        int width = bmp.getWidth();
        int height = bmp.getHeight();
        byte[] grayScaleRaw = new byte[width * height];
        int i = 0;
        for (int y = 0; y < height; ++y) {
            for (int x = 0; x < width; ++x) {
                // get one pixel color
                int pixel = bmp.getPixel(x, y);
                // retrieve color of all channel
                int R = Color.red(pixel);
</suffix>
</CurrentEdit>
<CtxEdits>
<Edit>
<prefix>     * http://stackoverflow.com/a/17410076
     * This method converts device specific pixels to density independent pixels.
     *
     * @param px      A value in px (pixels) unit. Which we need to convert into db
     * @param context Context to get resources and device specific display metrics
     * @return A float value to represent dp equivalent to px value
     */
    public static int convertPixelsToDp(float px, Context context) {
        DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();
        return Math.round(px / (displayMetrics.xdpi / DisplayMetrics.DENSITY_DEFAULT));
    }

    //http://stackoverflow.com/a/4989543
    public static byte[] convertBitmapToByteArray(Bitmap bitmap, CompressFormat compressFormat) {
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
</prefix>
<before></before>
<after>        bmp.compress(Bitmap.CompressFormat.PNG, 100, stream);
</after>
<suffix>        return stream.toByteArray();
    }

    public static byte[] BitmapToGrayScale(Bitmap bmp) {
        int width = bmp.getWidth();
        int height = bmp.getHeight();
        byte[] grayScaleRaw = new byte[width * height];
        int i = 0;
        for (int y = 0; y < height; ++y) {
            for (int x = 0; x < width; ++x) {
                // get one pixel color
                int pixel = bmp.getPixel(x, y);
                // retrieve color of all channel
                int R = Color.red(pixel);
</suffix>
</Edit>
</CtxEdits>
